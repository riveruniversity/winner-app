import{initializeApp as Te}from"https://www.gstatic.com/firebasejs/12.0.0/firebase-app.js";import{getFirestore as Le,enableIndexedDbPersistence as $e,collection as k,query as Z,where as ke,orderBy as Pe,getDocs as j,onSnapshot as ze,doc as $,deleteDoc as xe,getDoc as P,getDocsFromCache as Me,setDoc as V,getDocFromCache as Fe}from"https://www.gstatic.com/firebasejs/12.0.0/firebase-firestore.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function n(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(s){if(s.ep)return;s.ep=!0;const r=n(s);fetch(s.href,r)}})();const De={apiKey:"AIzaSyDsmwKc7mw11sUPCn39OrJ7WWdij24AWDs",authDomain:"river-winner.firebaseapp.com",projectId:"river-winner",storageBucket:"river-winner.firebasestorage.app",messagingSenderId:"847634086851",appId:"1:847634086851:web:c606fcc3219a82dac65b76"},We=Te(De),I=Le(We);$e(I).catch(e=>{e.code=="failed-precondition"?console.warn("Firestore persistence failed: likely due to multiple tabs open."):e.code=="unimplemented"&&console.warn("Firestore persistence is not available in this browser.")});function qe(e){return{lists:"listId",winners:"winnerId",prizes:"prizeId",history:"historyId",settings:"key"}[e]||"id"}async function Ae(e,t,n={}){try{const o=qe(e),s=t[o];if(!s)throw new Error(`Document must have a '${o}' field`);if(e==="lists"&&t.entries&&t.entries.length>1e3)return console.log(`üì¶ Large list detected (${t.entries.length} entries), using sharding strategy`),await Ue(t,n.onProgress);console.log(`üíæ Saving ${e}/${s} locally (immediate return)...`);const r=$(I,e,s);return V(r,t,{merge:!1}).then(()=>{console.log(`üîÑ ${e}/${s} synced to server in background`)}).catch(i=>{console.warn(`‚ö†Ô∏è Background sync failed for ${e}/${s}:`,i)}),console.log(`‚úÖ ${e}/${s} save initiated - returning immediately`),s}catch(o){throw console.error(`Error initiating save for ${e}:`,o),o}}async function Ue(e,t=null){const n=e.entries,o=1e3;console.log(`üì¶ Large list detected (${n.length} entries), splitting into shards...`);const s=e.listId,r=Math.ceil(n.length/o),i=[];for(let d=0;d<r;d++){const h=d*o,v=Math.min(h+o,n.length),y=n.slice(h,v),p=`${s}-shard-${d}`,f={listId:p,parentListId:s,shardIndex:d,metadata:{...e.metadata,listId:p,parentListId:s,isListShard:!0,shardIndex:d,entriesInShard:y.length},entries:y},w=$(I,"lists",p);if(V(w,f,{merge:!1}).catch(S=>{console.warn(`‚ö†Ô∏è Shard ${p} sync failed:`,S)}),i.push(p),t){const S=(d+1)/r*90;t(S,`Saved shard ${d+1}/${r} (${y.length} entries)`)}await new Promise(S=>setTimeout(S,0))}const c={...e,entries:[],isSharded:!0,totalShards:r,totalEntries:n.length,shardIds:i},l=$(I,"lists",s);return V(l,c,{merge:!1}).catch(d=>{console.warn(`‚ö†Ô∏è Main list ${s} sync failed:`,d)}),t&&t(100,`Complete! Saved ${n.length} entries across ${r} shards`),console.log(`‚úÖ Large list saved: ${r} shards (shard-0 to shard-${r-1}), ${n.length} total entries`),s}async function Re(e){try{const t=$(I,"lists",e),n=await P(t);if(!n.exists())return null;const o=n.data();if(!o.isSharded)return o;console.log(`üì¶ Loading sharded list: ${o.totalShards} shards`);const s=[];for(const r of o.shardIds){const i=$(I,"lists",r),c=await P(i);if(c.exists()){const l=c.data();l&&l.entries&&s.push(...l.entries)}}return{...o,entries:s,metadata:{...o.metadata,reconstructed:!0}}}catch(t){throw console.error(`Error loading sharded list ${e}:`,t),t}}async function Ne(e,t=null){try{if(t){if(e==="lists")return await Re(t);const s=$(I,e,t),r=await P(s);return r.exists()?r.data():null}try{const s=await Me(k(I,e)),r=[];if(s.forEach(i=>{r.push(i.data())}),r.length>0)return console.log(`üì¶ Loaded ${r.length} ${e} from cache`),j(k(I,e)).then(i=>{console.log(`üîÑ Background sync complete for ${e}`)}).catch(i=>{console.warn(`Background sync failed for ${e}:`,i)}),e==="lists"?await ee(r):r}catch{console.log(`üì° No cache data for ${e}, fetching from server...`)}const n=await j(k(I,e)),o=[];return n.forEach(s=>{o.push(s.data())}),console.log(`üì° Loaded ${o.length} ${e} from server`),e==="lists"?await ee(o):o}catch(n){throw console.error(`Error getting from ${e}:`,n),n}}async function ee(e){const t=[],n=new Set;for(const o of e)if(!(n.has(o.listId)||o.metadata?.isListShard)){if(o.isSharded){console.log(`üîß Reconstructing sharded list ${o.listId} with ${o.totalShards} shards`);const s=[];for(const r of o.shardIds||[]){let i=e.find(c=>c.listId===r);if(!i)try{const c=o(I,"lists",r),l=await Fe(c);l.exists()&&(i=l.data(),P(c).then(()=>{console.log(`üîÑ Background sync complete for shard ${r}`)}).catch(d=>{console.warn(`Background sync failed for shard ${r}:`,d)}))}catch{console.log(`üì° Cache miss for shard ${r}, fetching from server...`);const l=o(I,"lists",r),d=await P(l);d.exists()&&(i=d.data())}i&&i.entries&&s.push(...i.entries)}t.push({...o,entries:s,metadata:{...o.metadata,reconstructed:!0,originalShardCount:o.totalShards}})}else t.push(o);n.add(o.listId)}return console.log(`üìã Processed ${t.length} lists (${e.length} raw documents)`),t}function He(e,t){try{console.log(`üóëÔ∏è Deleting ${e}/${t} (fire-and-forget)...`);const n=$(I,e,t);return xe(n).then(()=>{console.log(`‚úÖ ${e}/${t} deleted from server`)}).catch(o=>{console.warn(`‚ö†Ô∏è Background delete failed for ${e}/${t}:`,o)}),t}catch(n){throw console.error(`Error initiating delete for ${e}:`,n),n}}function Oe(e,t){const n=k(I,e);return ze(n,o=>{const s=[];o.forEach(r=>{s.push(r.data())}),t(s)},o=>{console.error(`Error listening to ${e}:`,o)})}async function je(e,t=[]){try{let n=k(I,e);for(const r of t)r.type==="where"?n=Z(n,ke(r.field,r.operator,r.value)):r.type==="orderBy"&&(n=Z(n,Pe(r.field,r.direction||"asc")));const o=await j(n),s=[];return o.forEach(r=>{s.push(r.data())}),s}catch(n){throw console.error(`Error querying ${e}:`,n),n}}const m={saveToStore:Ae,getFromStore:Ne,deleteFromStore:He,listenToCollection:Oe,queryStore:je,initDB:()=>Promise.resolve(I)};window.Database=m;function Ve(e=10){const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let n="";for(let o=0;o<e;o++)n+=t.charAt(Math.floor(Math.random()*t.length));return n}function D(e,t="info"){const n={success:"#10b981",error:"#ef4444",warning:"#f59e0b",info:"#06b6d4"};Toastify({text:e,duration:3e3,gravity:"bottom",position:"right",style:{background:n[t]||n.info}}).showToast()}function Qe(e,t){document.getElementById("progressTitle").textContent=e,document.getElementById("progressText").textContent=t,document.getElementById("progressFill").style.width="0%",document.getElementById("progressOverlay").classList.remove("d-none")}function Ge(e,t){document.getElementById("progressFill").style.width=e+"%",t&&(document.getElementById("progressText").textContent=t)}function _e(){document.getElementById("progressOverlay").classList.add("d-none")}function Ke(e,t,n){const o=document.getElementById("appModalLabel"),s=document.getElementById("appModalBody"),r=document.getElementById("appModalConfirmBtn"),i=document.querySelector("#appModal .modal-footer .btn-secondary");o.textContent=e,s.innerHTML=`<p>${t}</p>`,r.textContent="Confirm",r.className="btn btn-danger",r.style.display="inline-block",i.textContent="Cancel";const c=r.cloneNode(!0);r.parentNode.replaceChild(c,r),c.addEventListener("click",async()=>{try{await n()}catch(l){console.error(`Error in confirmation modal for "${e}":`,l),D(`Operation failed: ${l.message}`,"error")}finally{window.appModal.hide()}},{once:!0}),window.appModal.show()}function Je(e){return new Promise((t,n)=>{const o=new FileReader;o.onload=s=>t(s.target.result),o.onerror=s=>n(new Error("Failed to read file")),o.readAsText(e)})}async function ne(e=null,t=null){try{const n=e||await m.getFromStore("lists"),o=t||await m.getFromStore("prizes"),s=document.getElementById("quickListSelect"),r=document.getElementById("quickPrizeSelect"),i=document.getElementById("quickWinnersCount");s&&(s.innerHTML='<option value="">Select List...</option>',n.forEach(c=>{const l=c.listId||c.metadata.listId,d=document.createElement("option");d.value=l,d.textContent=`${c.metadata.name} (${c.entries.length})`,s.appendChild(d)}),u.selectedListId&&(s.value=u.selectedListId)),r&&(r.innerHTML='<option value="">Select Prize...</option>',o.filter(c=>c.quantity>0).forEach(c=>{const l=document.createElement("option");l.value=c.prizeId,l.textContent=`${c.name} (${c.quantity} available)`,r.appendChild(l)}),u.selectedPrizeId&&(r.value=u.selectedPrizeId)),i&&u.winnersCount&&(i.value=u.winnersCount),Q()}catch(n){console.error("Error populating quick selects:",n),D("Error loading selection options: "+n.message,"error")}}function oe(){const e=document.getElementById("totalEntriesCard");e&&(e.style.display=u.hideEntryCounts?"none":"block")}async function Ye(e=null,t=null){try{await ne(e,t),oe(),Q()}catch(n){console.error("Error syncing UI:",n),D("Failed to refresh the application interface.","error")}}function Q(){const e=document.getElementById("quickListSelect"),t=document.getElementById("quickPrizeSelect"),n=document.getElementById("quickWinnersCount");if(!e||!t||!n)return;const o=e.options[e.selectedIndex],s=t.options[t.selectedIndex],r=o?o.textContent.split(" (")[0]:"Not Selected",i=s?s.textContent.split(" (")[0]:"Not Selected";document.getElementById("currentListDisplay").textContent=r,document.getElementById("currentPrizeDisplay").textContent=i,document.getElementById("winnersCountDisplay").textContent=n.value,u.selectedListId=e.value,u.selectedPrizeId=t.value,u.winnersCount=parseInt(n.value)||1,e.value?se():document.getElementById("totalEntriesDisplay").textContent="0";const c=document.getElementById("bigPlayButton");c&&(c.disabled=!e.value||!t.value)}async function se(){try{const t=document.getElementById("quickListSelect").value;if(t){const n=await m.getFromStore("lists",t);n&&(document.getElementById("totalEntriesDisplay").textContent=n.entries.length)}}catch(e){console.error("Error updating total entries:",e)}}const a={generateId:Ve,showToast:D,showProgress:Qe,updateProgress:Ge,hideProgress:_e,showConfirmationModal:Ke,readFileAsText:Je,populateQuickSelects:ne,applyVisibilitySettings:oe,syncUI:Ye,updateSelectionInfo:Q,updateTotalEntries:se};window.UI=a;let u={preventDuplicates:!1,enableSoundEffects:!1,hideEntryCounts:!1,fontFamily:"Open Sans",primaryColor:"#6366f1",secondaryColor:"#8b5cf6",backgroundType:"gradient",customBackgroundImage:null,selectedListId:"",selectedPrizeId:"",winnersCount:1};async function G(){for(const[e,t]of Object.entries(u)){const n={key:e,value:t};await m.saveToStore("settings",n)}}async function Xe(){try{const e=await m.getFromStore("settings");for(const t of e)u.hasOwnProperty(t.key)&&(u[t.key]=t.value)}catch(e){console.warn("Could not load settings:",e)}}async function Ze(){try{const e={preventDuplicates:document.getElementById("preventDuplicates")?.checked||u.preventDuplicates,enableSoundEffects:document.getElementById("enableSoundEffects")?.checked||u.enableSoundEffects,hideEntryCounts:document.getElementById("hideEntryCounts")?.checked||u.hideEntryCounts,fontFamily:document.getElementById("fontFamily")?.value||u.fontFamily,primaryColor:document.getElementById("primaryColor")?.value||u.primaryColor,secondaryColor:document.getElementById("secondaryColor")?.value||u.secondaryColor,backgroundType:document.getElementById("backgroundType")?.value||u.backgroundType},t={selectedListId:document.getElementById("quickListSelect")?.value||u.selectedListId,selectedPrizeId:document.getElementById("quickPrizeSelect")?.value||u.selectedPrizeId,winnersCount:parseInt(document.getElementById("quickWinnersCount")?.value)||u.winnersCount};Object.assign(u,e,t),await G(),W(),await a.populateQuickSelects(),a.applyVisibilitySettings(),a.showToast("Settings saved successfully","success")}catch(e){console.error("Error saving settings:",e),a.showToast("Error saving settings: "+e.message,"error")}}function et(){W(),_()}function W(){const e=document.documentElement;e.style.setProperty("--primary-color",u.primaryColor),e.style.setProperty("--secondary-color",u.secondaryColor),e.style.setProperty("--font-family",u.fontFamily);const t=`linear-gradient(135deg, ${u.primaryColor} 0%, ${u.secondaryColor} 100%)`;e.style.setProperty("--gradient-bg",t),document.body.style.fontFamily=`'${u.fontFamily}', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif`}function _(){const e={preventDuplicates:u.preventDuplicates,enableSoundEffects:u.enableSoundEffects,hideEntryCounts:u.hideEntryCounts,fontFamily:u.fontFamily,primaryColor:u.primaryColor,secondaryColor:u.secondaryColor,backgroundType:u.backgroundType};for(const[s,r]of Object.entries(e)){const i=document.getElementById(s);i&&(i.type==="checkbox"?i.checked=r:i.value=r)}const t=document.getElementById("quickListSelect"),n=document.getElementById("quickPrizeSelect"),o=document.getElementById("quickWinnersCount");t&&u.selectedListId&&(t.value=u.selectedListId),n&&u.selectedPrizeId&&(n.value=u.selectedPrizeId),o&&u.winnersCount&&(o.value=u.winnersCount)}function tt(){const e=document.body,t=document.getElementById("themeToggle");e.getAttribute("data-theme")==="dark"?(e.setAttribute("data-theme","light"),t.innerHTML='<i class="bi bi-moon-fill"></i>'):(e.setAttribute("data-theme","dark"),t.innerHTML='<i class="bi bi-sun-fill"></i>')}function nt(e){const t=e.currentTarget.getAttribute("data-theme"),o={default:{primaryColor:"#6366f1",secondaryColor:"#8b5cf6",fontFamily:"Inter"},emerald:{primaryColor:"#10b981",secondaryColor:"#06d6a0",fontFamily:"Inter"},ruby:{primaryColor:"#ef4444",secondaryColor:"#f87171",fontFamily:"Poppins"},gold:{primaryColor:"#f59e0b",secondaryColor:"#fbbf24",fontFamily:"Poppins"},ocean:{primaryColor:"#0ea5e9",secondaryColor:"#06b6d4",fontFamily:"Open Sans"},corporate:{primaryColor:"#374151",secondaryColor:"#6b7280",fontFamily:"Roboto"}}[t];o&&(u.primaryColor=o.primaryColor,u.secondaryColor=o.secondaryColor,u.fontFamily=o.fontFamily,W(),_(),G(),a.showToast(`Applied ${t.charAt(0).toUpperCase()+t.slice(1)} theme`,"success"))}const E={saveSettings:G,loadSettings:Xe,handleSaveSettings:Ze,setupTheme:et,applyTheme:W,loadSettingsToForm:_,toggleTheme:tt,handleThemePreset:nt,updateSettings:function(e){Object.assign(u,e)}};window.Settings=E;function re(){const e=document.getElementById("listsContainer");if(e)return e.innerHTML='<p class="text-muted">üì¶ Loading lists...</p>',m.getAllFromStoreWithUpdates("lists",(t,n)=>{try{if(n==="cache"&&t.length>0?console.log("üì¶ Lists loaded from cache"):n==="server"&&console.log("üîÑ Lists updated from server"),t.length===0){e.innerHTML='<p class="text-muted">No lists uploaded yet.</p>';return}t.forEach(async o=>{!o.listId&&o.metadata&&o.metadata.listId&&(o.listId=o.metadata.listId,await m.saveToStore("lists",o))}),e.innerHTML=t.map(o=>`
        <div class="card mb-3">
          <div class="card-body">
            <h6 class="card-title">${o.metadata.name}</h6>
            <p class="card-text">
              <small class="text-muted">
                ${o.entries.length} entries ‚Ä¢ 
                Uploaded ${new Date(o.metadata.timestamp).toLocaleDateString()}
                ${n==="cache"?"üì¶":"üîÑ"}
              </small>
            </p>
            <div class="btn-group btn-group-sm">
              <button class="btn btn-outline-primary" data-list-id="${o.listId||o.metadata.listId}" onclick="Lists.viewList(this.dataset.listId)">
                <i class="bi bi-eye"></i> View
              </button>
              <button class="btn btn-outline-danger" data-list-id="${o.listId||o.metadata.listId}" onclick="Lists.deleteListConfirm(this.dataset.listId)">
                <i class="bi bi-trash"></i> Delete
              </button>
            </div>
          </div>
        </div>
      `).join("")}catch(o){console.error("Error rendering lists:",o),a.showToast("Error loading lists: "+o.message,"error")}})}async function ot(){try{const e=await m.getFromStore("lists"),t=document.getElementById("listsContainer");if(!t)return;if(e.length===0){t.innerHTML='<p class="text-muted">No lists uploaded yet.</p>';return}for(const n of e)!n.listId&&n.metadata&&n.metadata.listId&&(n.listId=n.metadata.listId,await m.saveToStore("lists",n));t.innerHTML=e.map(n=>`
      <div class="card mb-3">
        <div class="card-body">
          <h6 class="card-title">${n.metadata.name}</h6>
          <p class="card-text">
            <small class="text-muted">
              ${n.entries.length} entries ‚Ä¢ 
              Uploaded ${new Date(n.metadata.timestamp).toLocaleDateString()}
            </small>
          </p>
          <div class="btn-group btn-group-sm">
            <button class="btn btn-outline-primary" data-list-id="${n.listId||n.metadata.listId}" onclick="Lists.viewList(this.dataset.listId)">
              <i class="bi bi-eye"></i> View
            </button>
            <button class="btn btn-outline-danger" data-list-id="${n.listId||n.metadata.listId}" onclick="Lists.deleteListConfirm(this.dataset.listId)">
              <i class="bi bi-trash"></i> Delete
            </button>
          </div>
        </div>
      </div>
    `).join("")}catch(e){console.error("Error loading lists:",e),a.showToast("Error loading lists: "+e.message,"error")}}async function st(e){try{const t=await m.getFromStore("lists",e);if(t){const n=document.getElementById("appModalLabel"),o=document.getElementById("appModalBody"),s=document.getElementById("appModalConfirmBtn"),r=document.querySelector("#appModal .modal-footer .btn-secondary");n.textContent=`List: ${t.metadata.name}`;const i=t.entries.slice(0,10).map(c=>`<li>${ie(c,t.metadata.nameConfig)}</li>`).join("");o.innerHTML=`
        <p><strong>Total Entries:</strong> ${t.entries.length}</p>
        <h6>First 10 Entries:</h6>
        <ul>${i}</ul>
        ${t.entries.length>10?"<p>...</p>":""}
      `,s.style.display="none",r.textContent="Close",window.appModal.show()}}catch(t){console.error("Error viewing list:",t),a.showToast("Error viewing list: "+t.message,"error")}}function rt(e){a.showConfirmationModal("Delete List","Are you sure you want to delete this list? This action cannot be undone.",()=>{try{m.deleteFromStore("lists",e),a.showToast("List deleted successfully","success"),re(),a.populateQuickSelects()}catch(t){console.error("Error deleting list:",t),a.showToast("Error deleting list: "+t.message,"error")}})}function ie(e,t){if(typeof t=="string")return t.replace(/\{([^}]+)\}/g,(s,r)=>e.data[r.trim()]||"").trim()||"Unknown";if(t&&t.columns&&t.columns.length>0){let s=e.data[t.columns[0]]||"";for(let r=1;r<t.columns.length;r++){const i=t.delimiters[r-1]||" ",c=e.data[t.columns[r]]||"";c&&(s+=i+c)}return s||"Unknown"}const n=["name","full_name","first_name","last_name"];for(const s of n)if(e.data[s])return e.data[s];const o=Object.keys(e.data)[0];return e.data[o]||"Unknown"}const q={loadLists:re,loadListsTraditional:ot,viewList:st,deleteListConfirm:rt,formatDisplayName:ie};window.Lists=q;async function A(){try{const e=await m.getFromStore("prizes"),t=document.getElementById("prizesContainer");if(!t)return;if(e.length===0){t.innerHTML='<p class="text-muted">No prizes added yet.</p>';return}t.innerHTML=e.map(n=>`
        <div class="card mb-3">
          <div class="card-body">
            <h6 class="card-title">${n.name}</h6>
            <p class="card-text">
              <span class="badge bg-primary">Qty: ${n.quantity}</span>
              ${n.description?`<br><small class="text-muted">${n.description}</small>`:""}
            </p>
            <div class="btn-group btn-group-sm">
              <button class="btn btn-outline-primary" data-prize-id="${n.prizeId}" onclick="Prizes.editPrize(this.dataset.prizeId)">
                <i class="bi bi-pencil"></i> Edit
              </button>
              <button class="btn btn-outline-danger" data-prize-id="${n.prizeId}" onclick="Prizes.deletePrizeConfirm(this.dataset.prizeId)">
                <i class="bi bi-trash"></i> Delete
              </button>
            </div>
          </div>
        </div>
      `).join("")}catch(e){console.error("Error loading prizes:",e),a.showToast("Error loading prizes: "+e.message,"error")}}async function it(){const e=document.getElementById("prizeName"),t=document.getElementById("prizeQuantity"),n=document.getElementById("prizeDescription"),o=e.value.trim(),s=parseInt(t.value),r=n.value.trim();if(!o){a.showToast("Please enter a prize name","warning");return}if(s<1){a.showToast("Please enter a valid quantity","warning");return}try{const i=a.generateId(),c={prizeId:i,name:o,quantity:s,description:r,timestamp:Date.now(),id:i};await m.saveToStore("prizes",c),a.showToast(`Prize "${o}" added successfully`,"success"),e.value="",t.value="1",n.value="",await A(),await a.populateQuickSelects()}catch(i){console.error("Error adding prize:",i),a.showToast("Error adding prize: "+i.message,"error")}}async function at(e){const n=(await m.getFromStore("prizes")).find(c=>c.prizeId===e);if(!n)return;const o=document.getElementById("appModalLabel"),s=document.getElementById("appModalBody"),r=document.getElementById("appModalConfirmBtn");o.textContent="Edit Prize",s.innerHTML=`
      <div class="mb-3">
        <label for="modalPrizeName" class="form-label">Prize Name</label>
        <input type="text" class="form-control" id="modalPrizeName" value="${n.name}">
      </div>
      <div class="mb-3">
        <label for="modalPrizeQuantity" class="form-label">Quantity</label>
        <input type="number" class="form-control" id="modalPrizeQuantity" value="${n.quantity}" min="0">
      </div>
      <div class="mb-3">
        <label for="modalPrizeDescription" class="form-label">Description</label>
        <textarea class="form-control" id="modalPrizeDescription" rows="3">${n.description||""}</textarea>
      </div>
    `,r.textContent="Save Changes",r.className="btn btn-primary",r.style.display="inline-block";const i=r.cloneNode(!0);r.parentNode.replaceChild(i,r),i.addEventListener("click",async()=>{const c=document.getElementById("modalPrizeName").value.trim(),l=parseInt(document.getElementById("modalPrizeQuantity").value),d=document.getElementById("modalPrizeDescription").value.trim();c&&l>=0?(n.name=c,n.quantity=l,n.description=d,await m.saveToStore("prizes",n),a.showToast("Prize updated successfully","success"),await A(),await a.populateQuickSelects(),window.appModal.hide()):a.showToast("Please enter valid prize details.","warning")},{once:!0}),window.appModal.show()}async function lt(e){a.showConfirmationModal("Delete Prize","Are you sure you want to delete this prize?",async()=>{await m.deleteFromStore("prizes",e),a.showToast("Prize deleted successfully","success"),await A(),await a.populateQuickSelects()})}const K={loadPrizes:A,handleAddPrize:it,editPrize:at,deletePrizeConfirm:lt};window.Prizes=K;async function U(){try{const e=await m.getFromStore("winners"),t=await m.getFromStore("lists"),n=document.getElementById("winnersTableBody");if(!n)return;const o={};t.forEach(l=>{const d=l.listId||l.metadata.listId;o[d]=l.metadata.name});const s=document.getElementById("filterPrize").value,r=document.getElementById("filterList").value,i=document.getElementById("filterSelection").value;ae(e,t,s,r,i);const c=e.filter(l=>{const d=!s||l.prize===s,h=o[l.listId]||"Unknown",v=!r||h===r,y=!i||l.historyId===i;return d&&v&&y});if(le(c.length,e.length,s,r,i),c.length===0){n.innerHTML='<tr><td colspan="6" class="text-center text-muted">No winners match the current filters.</td></tr>';return}n.innerHTML=c.map(l=>`
      <tr>
        <td><span class="badge bg-primary">${l.uniqueId||l.winnerId.slice(0,5).toUpperCase()}</span></td>
        <td>${l.displayName}</td>
        <td>${l.prize}</td>
        <td>${new Date(l.timestamp).toLocaleDateString()}</td>
        <td>${o[l.listId]||"Unknown"}</td>
        <td>
          <button class="btn btn-sm btn-outline-danger" data-winner-id="${l.winnerId}" onclick="Winners.deleteWinnerConfirm(this.dataset.winnerId)">
            <i class="bi bi-trash"></i>
          </button>
        </td>
      </tr>
    `).join("")}catch(e){console.error("Error loading winners:",e),a.showToast("Error loading winners: "+e.message,"error")}}function ae(e,t,n="",o="",s=""){const r=document.getElementById("filterPrize"),i=document.getElementById("filterList"),c=document.getElementById("filterSelection"),l={};t.forEach(p=>{const f=p.listId||p.metadata.listId;l[f]=p.metadata.name});const d=[...new Set(e.map(p=>p.prize))].sort(),h=[...new Set(e.map(p=>l[p.listId]||"Unknown"))].sort(),v=[...new Set(e.map(p=>p.historyId).filter(Boolean))];r.innerHTML='<option value="">All Prizes</option>',d.forEach(p=>{const f=e.filter(w=>w.prize===p).length;r.innerHTML+=`<option value="${p}">${p} (${f})</option>`}),r.value=n,i.innerHTML='<option value="">All Lists</option>',h.forEach(p=>{const f=e.filter(w=>(l[w.listId]||"Unknown")===p).length;i.innerHTML+=`<option value="${p}">${p} (${f})</option>`}),i.value=o,c.innerHTML='<option value="">All Selections</option>';const y=v.map(p=>{const f=e.filter(g=>g.historyId===p),w=f[0]?.timestamp,S=f[0]?.prize,T=f.length;return{id:p,timestamp:w,prize:S,count:T,label:`${new Date(w).toLocaleDateString()} - ${S} (${T} winner${T>1?"s":""})`}});y.sort((p,f)=>f.timestamp-p.timestamp),y.forEach(p=>{c.innerHTML+=`<option value="${p.id}">${p.label}</option>`}),c.value=s}function le(e,t,n,o,s){const r=document.getElementById("winnersCount"),i=document.getElementById("filterStatus");if(!r||!i)return;e===t?r.textContent=`Showing ${t} winners`:r.textContent=`Showing ${e} of ${t} winners`;const c=[];n&&c.push(`Prize: ${n}`),o&&c.push(`List: ${o}`),s&&c.push(`Selection: ${s}`),c.length>0?i.textContent=`Filtered by: ${c.join(", ")}`:i.textContent=""}async function ct(e){a.showConfirmationModal("Delete Winner","Are you sure you want to delete this winner record?",()=>{try{m.deleteFromStore("winners",e),a.showToast("Winner deleted successfully","success"),U(),N()}catch(t){console.error("Error deleting winner:",t),a.showToast("Error deleting winner: "+t.message,"error")}})}async function dt(e){await m.saveToStore("winners",e)}async function ce(){return m.getFromStore("winners")}async function ut(){a.showConfirmationModal("Clear All Winners","Are you sure you want to delete ALL winner records? This action cannot be undone and will remove all winners from the database.",async()=>{try{a.showProgress("Clearing Winners","Removing all winner records...");const e=await ce();let t=0;for(const n of e)m.deleteFromStore("winners",n.winnerId),t++,a.updateProgress(t/e.length*100,`Deleted ${t} of ${e.length} winners...`);a.hideProgress(),a.showToast(`Successfully cleared ${t} winner records`,"success"),await U(),N()}catch(e){a.hideProgress(),console.error("Error clearing winners:",e),a.showToast("Error clearing winners: "+e.message,"error")}})}async function mt(){const e=Pt();if(!e||e.type!=="selectWinners"){a.showToast("No recent selection to undo","warning");return}a.showConfirmationModal("Undo Last Selection","Are you sure you want to undo the last winner selection? This will delete the winners, restore prize quantities, and cannot be undone.",async()=>{try{a.showProgress("Undoing Selection","Reversing last selection...");for(const n of e.winners)m.deleteFromStore("winners",n.winnerId);m.getFromStore("prizes").then(n=>{const o=n.find(s=>s.prizeId===e.prizeId);o&&(o.quantity+=e.prizeCount,m.saveToStore("prizes",o))}),m.deleteFromStore("history",e.historyId);const t=B();u.preventDuplicates&&t&&(t.entries.push(...e.removedEntries),!t.listId&&t.metadata&&t.metadata.listId&&(t.listId=t.metadata.listId),m.saveToStore("lists",t)),a.hideProgress(),a.showToast("Selection undone successfully","success"),await U(),de(),Be(null)}catch(t){a.hideProgress(),console.error("Error undoing selection:",t),a.showToast("Error undoing selection: "+t.message,"error")}})}function de(){document.getElementById("selectionControls").classList.remove("d-none"),document.getElementById("prizeDisplay").classList.add("d-none"),document.getElementById("winnersGrid").classList.add("d-none"),document.getElementById("actionButtons").classList.add("d-none"),a.populateQuickSelects()}const C={loadWinners:U,populateWinnerFilters:ae,updateWinnersCountDisplay:le,deleteWinnerConfirm:ct,saveWinner:dt,getAllWinners:ce,clearAllWinners:ut,undoLastSelection:mt,resetToSelectionMode:de};window.Winners=C;let z=null;function pt(){console.log("startSwirlAnimation called");const e=document.getElementById("animationCanvas");e.getContext("2d"),e.width=window.innerWidth,e.height=window.innerHeight;function t(n){const o=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(n);return o?{r:parseInt(o[1],16),g:parseInt(o[2],16),b:parseInt(o[3],16)}:null}t(E.settings.primaryColor),t(E.settings.secondaryColor),window.addEventListener("resize",()=>{e.width=window.innerWidth,e.height=window.innerHeight})}function gt(){const e=document.getElementById("animationCanvas"),t=e.getContext("2d");let n=[];e.width=window.innerWidth,e.height=window.innerHeight;function o(l){const d=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(l);return d?{r:parseInt(d[1],16),g:parseInt(d[2],16),b:parseInt(d[3],16)}:null}const s=o(E.settings.primaryColor),r=o(E.settings.secondaryColor);class i{constructor(){this.x=Math.random()*e.width,this.y=Math.random()*e.height,this.radius=Math.random()*2+1,this.vx=(Math.random()-.5)*4,this.vy=(Math.random()-.5)*4,this.color=Math.random()>.5?s:r,this.opacity=Math.random()*.5+.5}update(){this.x+=this.vx,this.y+=this.vy,(this.x<0||this.x>e.width)&&(this.vx*=-1),(this.y<0||this.y>e.height)&&(this.vy*=-1)}draw(){t.beginPath(),t.arc(this.x,this.y,this.radius,0,Math.PI*2),t.fillStyle=`rgba(${this.color.r}, ${this.color.g}, ${this.color.b}, ${this.opacity})`,t.fill()}}for(let l=0;l<50;l++)n.push(new i);function c(){t.clearRect(0,0,e.width,e.height),n.forEach(l=>{l.update(),l.draw()}),z=requestAnimationFrame(c)}c()}function ft(){z&&(cancelAnimationFrame(z),z=null)}const x={startSwirlAnimation:pt,startParticleAnimation:gt,stopAnimation:ft};window.Animations=x;function ue(){const e=`
    function generateId(length = 10) {
      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
      let result = '';
      for (let i = 0; i < length; i++) {
        result += chars.charAt(Math.floor(Math.random() * chars.length));
      }
      return result;
    }
    
    function selectRandomWinners(entries, numWinners, seed) {
      // Use seed for reproducible randomness if needed
      if (seed) {
        Math.seedrandom = function(seed) {
          let x = Math.sin(seed) * 10000;
          return function() {
            x = Math.sin(x) * 10000;
            return x - Math.floor(x);
          };
        };
        Math.random = Math.seedrandom(seed);
      }
      
      const available = [...entries];
      const selected = [];
      
      for (let i = 0; i < numWinners && available.length > 0; i++) {
        const randomIndex = Math.floor(Math.random() * available.length);
        selected.push(available.splice(randomIndex, 1)[0]);
      }
      
      return selected;
    }
    
    self.onmessage = function(e) {
      if (e.data.type === 'select') {
        try {
          const result = selectRandomWinners(e.data.entries, e.data.numWinners, e.data.seed);
          self.postMessage({ type: 'complete', result });
        } catch (error) {
          self.postMessage({ type: 'error', error: error.message });
        }
      }
    };
  `,t=new Blob([e],{type:"application/javascript"});return new Worker(URL.createObjectURL(t))}async function ht(){try{const e=document.getElementById("quickListSelect").value,t=document.getElementById("quickPrizeSelect").value,n=parseInt(document.getElementById("quickWinnersCount").value),o=document.getElementById("displayMode").value;if(!e||!t){a.showToast("Please select both a list and a prize","warning");return}if(n<1){a.showToast("Please enter a valid number of winners","warning");return}const s=await m.getFromStore("lists",e),i=(await m.getFromStore("prizes")).find(c=>c.prizeId===t);if(!s||!i){a.showToast("Selected list or prize not found","error");return}if(i.quantity<n){a.showToast(`Not enough prizes available. Only ${i.quantity} remaining.`,"warning");return}if(s.entries.length<n){a.showToast(`Not enough entries in list. Only ${s.entries.length} available.`,"warning");return}Ce(s),console.log("Big play clicked, display mode:",o),o==="countdown"||o==="animation"||o==="swirl-animation"?(console.log("Calling showCountdown for mode:",o),me(n,i,"all-at-once")):(console.log("Calling selectWinners directly for mode:",o),await J(n,i,o))}catch(e){console.error("Error in big play click:",e),a.showToast("Error selecting winners: "+e.message,"error")}}function me(e,t,n="all-at-once"){const o=document.getElementById("countdownOverlay"),s=document.getElementById("countdownNumber"),r=document.getElementById("displayMode").value;console.log("Display mode selected:",r),r==="animation"?(console.log("Starting particle animation"),x.startParticleAnimation()):r==="swirl-animation"&&(console.log("Starting swirl animation"),x.startSwirlAnimation());let i=parseInt(document.getElementById("countdownDuration").value)||5;o.classList.remove("d-none"),s.textContent=i;const c=setInterval(()=>{i--,i>0?(s.textContent=i,u.enableSoundEffects&&R("countdown")):(clearInterval(c),(r==="animation"||r==="swirl-animation")&&(console.log("Stopping animation for mode:",r),x.stopAnimation()),o.classList.add("d-none"),J(e,t,n))},1e3)}async function J(e,t,n){try{a.showProgress("Selecting Winners","Preparing random selection..."),document.getElementById("selectionControls").classList.add("d-none");const o=ue(),s=await new Promise((l,d)=>{o.onmessage=function(h){h.data.type==="complete"?l(h.data.result):h.data.type==="error"&&d(new Error(h.data.error))},o.postMessage({type:"select",entries:B().entries,numWinners:e,seed:Date.now()})});a.updateProgress(50,"Creating winner records...");const r=a.generateId(8),i=s.map((l,d)=>({winnerId:a.generateId(),uniqueId:a.generateId(5).toUpperCase(),...l.data,displayName:q.formatDisplayName(l,B().metadata.nameConfig),prize:t.name,timestamp:Date.now(),originalEntry:l,listId:B().listId||B().metadata.listId,position:d+1,historyId:r}));a.updateProgress(75,"Saving winners...");for(const l of i)await C.saveWinner(l);t.quantity-=e,await m.saveToStore("prizes",t);const c={historyId:r,listId:B().listId||B().metadata.listId,listName:B().metadata.name,prize:t.name,winners:i.map(l=>({winnerId:l.winnerId,displayName:l.displayName})),timestamp:Date.now()};if(await m.saveToStore("history",c),Be({type:"selectWinners",winners:i,removedEntries:s,prizeId:t.prizeId,prizeCount:e,historyId:c.historyId}),u.preventDuplicates){const l=B();l.entries=l.entries.filter(d=>!s.some(h=>h.id===d.id)),!l.listId&&l.metadata&&l.metadata.listId&&(l.listId=l.metadata.listId),Ce(l),await m.saveToStore("lists",l)}a.updateProgress(100,"Winners selected!"),setTimeout(()=>{a.hideProgress(),pe(i,t,n),C.loadWinners(),N(),u.enableSoundEffects&&R("winner")},500)}catch(o){a.hideProgress(),console.error("Error selecting winners:",o),a.showToast("Error selecting winners: "+o.message,"error"),C.resetToSelectionMode()}}function pe(e,t,n){const o=document.getElementById("prizeDisplay");document.getElementById("displayPrizeName").textContent=t.name,document.getElementById("displayPrizeSubtitle").textContent=`${e.length} Winner${e.length>1?"s":""}`,o.classList.remove("d-none");const s=document.getElementById("winnersGrid");s.innerHTML="",n==="sequential"?fe(e,s):ge(e,s),s.classList.remove("d-none"),document.getElementById("actionButtons").classList.remove("d-none")}function ge(e,t){e.forEach((n,o)=>{const s=Y(n);t.appendChild(s)})}function fe(e,t){const n=parseFloat(document.getElementById("displayDuration").value)||.5;console.log("Sequential reveal with delay:",n,"seconds"),e.forEach((o,s)=>{const r=s*(n*1e3);console.log(`Winner ${s+1} will appear after ${r}ms`),setTimeout(()=>{const i=Y(o);i.style.opacity="0",i.style.transform="translateY(20px)",t.appendChild(i),setTimeout(()=>{i.style.transition="all 0.6s ease-out",i.style.opacity="1",i.style.transform="translateY(0)",u.enableSoundEffects&&R("winner")},100)},r)})}function Y(e,t){const n=document.createElement("div");return n.className="winner-card",n.innerHTML=`
    <div class="winner-number">${e.position}</div>
    <div class="winner-name">${e.displayName}</div>
    <div class="winner-details">${he(e)}</div>
  `,n}function he(e){const t=[],n=["email","phone","department","id","employee_id","member_id"];for(const o of n)if(e[o]){t.push(`${o.toUpperCase()}: ${e[o]}`);break}return t.length>0?t[0]:"Winner Selected"}function R(e){if(u.enableSoundEffects)try{const t=new(window.AudioContext||window.webkitAudioContext);e==="countdown"?yt(t,800,100):e==="winner"&&wt(t)}catch(t){console.warn("Could not play sound:",t)}}function yt(e,t,n){const o=e.createOscillator(),s=e.createGain();o.connect(s),s.connect(e.destination),o.frequency.setValueAtTime(t,e.currentTime),o.type="sine",s.gain.setValueAtTime(.3,e.currentTime),s.gain.exponentialRampToValueAtTime(.01,e.currentTime+n/1e3),o.start(e.currentTime),o.stop(e.currentTime+n/1e3)}function wt(e){const t=[523.25,659.25,783.99],n=1e3;t.forEach(o=>{const s=e.createOscillator(),r=e.createGain();s.connect(r),r.connect(e.destination),s.frequency.setValueAtTime(o,e.currentTime),s.type="sine",r.gain.setValueAtTime(.2,e.currentTime),r.gain.exponentialRampToValueAtTime(.01,e.currentTime+n/1e3),s.start(e.currentTime),s.stop(e.currentTime+n/1e3)})}const ye={createRandomWorker:ue,handleBigPlayClick:ht,showCountdown:me,selectWinners:J,displayWinnersPublicly:pe,displayAllWinnersAtOnce:ge,displayWinnersSequentially:fe,createWinnerCard:Y,getWinnerDetails:he,playSound:R};window.Selection=ye;let b=null;function we(e){const t=e.split(`
`).filter(r=>r.trim());if(t.length===0)return{data:[],errors:["Empty file"]};const n=te(t[0]),o=[],s=[];for(let r=1;r<t.length;r++)try{const i=te(t[r]);if(i.length>0){const c={};n.forEach((l,d)=>{c[l.trim()]=i[d]?.trim()||""}),o.push(c)}}catch(i){s.push(`Line ${r+1}: ${i.message}`)}return{data:o,errors:s}}function te(e){const t=[];let n="",o=!1;for(let s=0;s<e.length;s++){const r=e[s],i=e[s+1];r==='"'?o&&i==='"'?(n+='"',s++):o=!o:r===","&&!o?(t.push(n),n=""):n+=r}return t.push(n),t}async function It(){const e=document.getElementById("listName"),n=document.getElementById("csvFile").files[0],o=n.name.replace(/\.[^/.]+$/,""),s=e.value.trim()||o;if(!n){a.showToast("Please select a CSV file","warning");return}try{a.showProgress("Processing CSV","Reading file...");const r=await a.readFileAsText(n),{data:i,errors:c}=we(r);if(c.length>0)throw new Error("CSV parsing errors: "+c.join(", "));if(i.length===0)throw new Error("CSV file appears to be empty");a.hideProgress(),b={listName:s,fileName:n.name,data:i},Et(i,s)}catch(r){a.hideProgress(),console.error("CSV upload error:",r),a.showToast("Error processing CSV: "+r.message,"error")}}function Et(e,t){const n=document.getElementById("dataPreviewCard"),o=document.getElementById("previewHeaders"),s=document.getElementById("previewBody");n.style.display="block";const r=Object.keys(e[0]);o.innerHTML="<tr>"+r.map(l=>`<th>${l}</th>`).join("")+"</tr>";const i=e.slice(0,10);s.innerHTML=i.map(l=>"<tr>"+r.map(d=>`<td>${l[d]||""}</td>`).join("")+"</tr>").join("");const c=document.querySelector("#dataPreviewCard .card-title");c.innerHTML=`Data Preview - <span class="list-name">"${t}"</span> <span class="list-count">(${e.length} total records, showing first ${i.length})</span>`,vt(r,e[0]),n.scrollIntoView({behavior:"smooth"}),a.showToast(`Preview ready! Showing first ${i.length} of ${e.length} records`,"info")}function vt(e,t){const n=document.getElementById("nameConfigCard"),o=document.getElementById("availableFields"),s=document.getElementById("nameTemplate"),r=document.getElementById("namePreview"),i=document.getElementById("idColumnSelect"),c=document.getElementById("columnIdSection"),l=document.getElementById("autoGenerateId"),d=document.getElementById("useColumnId");n.style.display="block",o.innerHTML="",e.forEach(p=>{const f=document.createElement("button");f.className="btn btn-sm btn-outline-secondary",f.textContent=p,f.onclick=()=>{const w=s.selectionStart,S=s.value,T=`{${p}}`;s.value=S.slice(0,w)+T+S.slice(w),s.focus(),v()},o.appendChild(f)}),i.innerHTML='<option value="">Select a column...</option>',e.forEach(p=>{const f=document.createElement("option");f.value=p,f.textContent=p,i.appendChild(f)});const h=e.length>1?`{${e[0]}} {${e[1]}}`:`{${e[0]}}`;s.value=h;function v(){const f=s.value.replace(/\{([^}]+)\}/g,(w,S)=>t[S]||"");r.textContent=f}function y(){d.checked?c.style.display="block":c.style.display="none"}l.removeEventListener("change",y),d.removeEventListener("change",y),s.removeEventListener("input",v),l.addEventListener("change",y),d.addEventListener("change",y),s.addEventListener("input",v),v(),y()}async function St(){if(!b){a.showToast("No data to upload","error");return}try{a.showProgress("Processing List","Validating data...");const e=bt(),t=Ct();if(t.source==="column"){const r=Bt(b.data,t.column);if(!r.isValid){a.hideProgress(),a.showToast(`ID validation failed: ${r.error}`,"error");return}}a.updateProgress(25,"Creating list structure...");const n=a.generateId(),o={listId:n,metadata:{listId:n,name:b.listName,timestamp:Date.now(),originalFilename:b.fileName,entryCount:b.data.length,nameConfig:e,idConfig:t},entries:b.data.map((r,i)=>({id:Tt(r,i,t),index:i,data:r}))};a.updateProgress(50,"Saving locally..."),await m.saveToStore("lists",o,{onProgress:(r,i)=>{a.updateProgress(50+r*.4,i)}}),a.updateProgress(100,"Complete! Syncing to cloud in background..."),setTimeout(()=>{a.hideProgress()},1e3);const s=b.data.length>1e3?`${b.data.length} entries (auto-sharded for optimal performance)`:`${b.data.length} entries`;a.showToast(`List "${b.listName}" processed successfully with ${s}! üì¶ Syncing to cloud...`,"success"),document.getElementById("listName").value="",document.getElementById("csvFile").value="",Ie(),b=null,await q.loadLists(),await a.populateQuickSelects()}catch(e){a.hideProgress(),console.error("Error confirming upload:",e),a.showToast("Error uploading list: "+e.message,"error")}}function bt(){return document.getElementById("nameTemplate").value.trim()}function Ct(){document.getElementById("autoGenerateId");const e=document.getElementById("useColumnId"),t=document.getElementById("idColumnSelect");if(e.checked){const n=t.value;if(!n)throw new Error("Please select a column for record IDs");return{source:"column",column:n}}else return{source:"auto"}}function Bt(e,t){const n=[],o=[],s=[];for(let r=0;r<e.length;r++){const i=e[r][t],c=r+1;if(!i||i.toString().trim()===""){s.push(c);continue}const l=i.toString().trim();n.includes(l)?o.push({value:l,row:c}):n.push(l)}return s.length>0?{isValid:!1,error:`Empty ID values found in rows: ${s.slice(0,5).join(", ")}${s.length>5?` and ${s.length-5} more`:""}`}:o.length>0?{isValid:!1,error:`Duplicate ID values found: ${o.slice(0,3).map(i=>`"${i.value}" (row ${i.row})`).join(", ")}${o.length>3?` and ${o.length-3} more`:""}`}:{isValid:!0}}function Tt(e,t,n){if(n.source==="column"){const o=e[n.column];return o?o.toString().trim():a.generateId()}else return a.generateId()}function Ie(){document.getElementById("dataPreviewCard").style.display="none",document.getElementById("nameConfigCard").style.display="none",b=null,a.showToast("Upload cancelled","info")}const M={parseCSV:we,handleCSVUpload:It,handleConfirmUpload:St,handleCancelUpload:Ie};window.CSVParser=M;async function Lt(){try{const e=await m.getFromStore("winners"),t=await m.getFromStore("lists");if(e.length===0){a.showToast("No winners to export","warning");return}const n={};t.forEach(g=>{const L=g.listId||g.metadata.listId;n[L]=g.metadata.name});const o=document.getElementById("filterPrize").value,s=document.getElementById("filterList").value,r=document.getElementById("filterSelection").value,i=e.filter(g=>{const L=!o||g.prize===o,H=n[g.listId]||"Unknown",O=!s||H===s,X=!r||g.historyId===r;return L&&O&&X});if(i.length===0){a.showToast("No winners match the current filters to export","warning");return}const c=i.map(g=>({...g,uniqueId:g.uniqueId||a.generateId(5).toUpperCase()}));for(const g of c)(!g.uniqueId||g.winnerId===g.uniqueId)&&(g.uniqueId=a.generateId(5).toUpperCase(),await m.saveToStore("winners",g));const l=["UniqueID","Name","Prize","Timestamp","ListName"],d=new Set;c.forEach(g=>{g.originalEntry&&g.originalEntry.data&&Object.keys(g.originalEntry.data).forEach(L=>d.add(L))});const h=Array.from(d),y=[[...l,...h].join(","),...c.map(g=>{const L=[g.uniqueId||g.winnerId,`"${g.displayName||"Unknown"}"`,`"${g.prize||"Unknown"}"`,new Date(g.timestamp).toISOString(),`"${n[g.listId]||"Unknown"}"`],H=h.map(O=>`"${g.originalEntry?.data?.[O]||""}"`);return[...L,...H].join(",")})].join(`
`),p=new Blob([y],{type:"text/csv;charset=utf-8;"}),f=URL.createObjectURL(p),w=document.createElement("a");w.href=f,w.download=`winner-app-export-${new Date().toISOString().split("T")[0]}.csv`,document.body.appendChild(w),w.click(),document.body.removeChild(w),URL.revokeObjectURL(f);const T=[o,s,r].filter(g=>g).length>0?`Exported ${i.length} filtered winners to CSV (${e.length} total)`:`Exported ${i.length} winners to CSV`;a.showToast(T,"success")}catch(e){console.error("Error exporting winners:",e),a.showToast("Error exporting winners: "+e.message,"error")}}async function $t(){try{a.showProgress("Creating Backup","Collecting data...");const e={version:"1.0",timestamp:Date.now(),lists:await m.getFromStore("lists"),prizes:await m.getFromStore("prizes"),winners:await m.getFromStore("winners"),history:await m.getFromStore("history"),settings:E.settings},t=JSON.stringify(e,null,2),n=new Blob([t],{type:"application/json"}),o=URL.createObjectURL(n),s=document.createElement("a");s.href=o,s.download=`winner-app-backup-${new Date().toISOString().split("T")[0]}.json`,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(o),a.hideProgress(),a.showToast("Backup created successfully","success")}catch(e){a.hideProgress(),console.error("Error creating backup:",e),a.showToast("Error creating backup: "+e.message,"error")}}function kt(){const e=document.getElementById("restoreFileInput");e&&(e.click(),e.onchange=Ee)}async function Ee(e){const t=e.target.files[0];if(t){try{a.showProgress("Restoring Data","Reading backup file...");const n=await a.readFileAsText(t),o=JSON.parse(n);if(!o.version)throw new Error("Invalid backup file format");if(a.updateProgress(25,"Restoring lists..."),o.lists)for(const s of o.lists)await m.saveToStore("lists",s);if(a.updateProgress(50,"Restoring prizes..."),o.prizes)for(const s of o.prizes)await m.saveToStore("prizes",s);if(a.updateProgress(75,"Restoring winners and history..."),o.winners)for(const s of o.winners)await m.saveToStore("winners",s);if(o.history)for(const s of o.history)await m.saveToStore("history",s);o.settings&&(E.updateSettings(o.settings),await E.saveSettings(),E.applyTheme(),E.loadSettingsToForm()),a.updateProgress(100,"Finalizing..."),setTimeout(async()=>{a.hideProgress(),a.showToast("Data restored successfully","success"),location.reload()},500)}catch(n){a.hideProgress(),console.error("Error restoring data:",n),a.showToast("Error restoring data: "+n.message,"error")}e.target.value=""}}const F={handleExportWinners:Lt,handleBackupData:$t,handleRestoreData:kt,processRestoreFile:Ee};window.Export=F;let ve=null,Se=null,be=null;function Ce(e){Se=e}function B(){return Se}function Be(e){be=e}function Pt(){return be}function zt(){q.loadLists(),K.loadPrizes(),a.syncUI()}async function xt(){try{await m.initDB(),E.loadSettings().then(()=>{E.setupTheme()}),zt(),C.loadWinners(),N(),Ut(),setTimeout(()=>{const e=document.getElementById("appModal");e&&(ve=new bootstrap.Modal(e))},100),Mt(),E.setupTheme()}catch(e){console.error("Initialization error:",e),a.showToast("Failed to initialize application: "+e.message,"error")}}function Mt(){Ft(),Dt(),Wt(),qt(),At()}function Ft(){const e=document.getElementById("managementToggle"),t=document.getElementById("backToPublicBtn"),n=document.getElementById("fullscreenToggle");e&&e.addEventListener("click",function(){document.getElementById("publicInterface").style.display="none",document.getElementById("managementInterface").classList.add("active")}),t&&t.addEventListener("click",function(){document.getElementById("managementInterface").classList.remove("active"),document.getElementById("publicInterface").style.display="flex"}),n&&n.addEventListener("click",function(){document.fullscreenElement?(document.exitFullscreen(),n.innerHTML='<i class="bi bi-fullscreen"></i>'):(document.documentElement.requestFullscreen(),n.innerHTML='<i class="bi bi-fullscreen-exit"></i>')})}function Dt(){const e=document.getElementById("quickListSelect"),t=document.getElementById("quickPrizeSelect"),n=document.getElementById("quickWinnersCount"),o=document.getElementById("bigPlayButton"),s=document.getElementById("newSelectionBtn"),r=document.getElementById("undoSelectionBtn");e&&e.addEventListener("change",a.updateSelectionInfo),t&&t.addEventListener("change",a.updateSelectionInfo),n&&n.addEventListener("input",a.updateSelectionInfo),o&&o.addEventListener("click",ye.handleBigPlayClick),s&&s.addEventListener("click",C.resetToSelectionMode),r&&r.addEventListener("click",C.undoLastSelection)}function Wt(){const e=document.getElementById("uploadBtn"),t=document.getElementById("csvFile"),n=document.getElementById("confirmUpload"),o=document.getElementById("cancelUpload");e&&e.addEventListener("click",()=>t.click()),t&&t.addEventListener("change",M.handleCSVUpload),n&&n.addEventListener("click",M.handleConfirmUpload),o&&o.addEventListener("click",M.handleCancelUpload);const s=document.getElementById("addPrizeBtn");s&&s.addEventListener("click",K.handleAddPrize);const r=document.getElementById("saveSettingsBtn");r&&r.addEventListener("click",E.handleSaveSettings);const i=document.getElementById("themeToggle");i&&i.addEventListener("click",E.toggleTheme),document.querySelectorAll(".theme-preset").forEach(y=>{y.addEventListener("click",E.handleThemePreset)});const l=document.getElementById("exportWinnersBtn"),d=document.getElementById("clearWinnersBtn"),h=document.getElementById("backupData"),v=document.getElementById("restoreData");l&&l.addEventListener("click",F.handleExportWinners),d&&d.addEventListener("click",C.clearAllWinners),h&&h.addEventListener("click",F.handleBackupData),v&&v.addEventListener("click",F.handleRestoreData)}function qt(){const e=document.getElementById("filterPrize"),t=document.getElementById("filterList"),n=document.getElementById("filterSelection");e&&e.addEventListener("change",C.loadWinners),t&&t.addEventListener("change",C.loadWinners),n&&n.addEventListener("change",C.loadWinners)}function At(){const e=document.getElementById("displayMode");if(e){const t=document.getElementById("durationSettings"),n=document.getElementById("countdownSettings"),o=()=>{const s=e.value,r=s==="sequential",i=s==="countdown"||s==="animation";t&&(t.style.display=r?"block":"none"),n&&(n.style.display=i?"block":"none")};e.addEventListener("change",o),o()}}async function N(){try{const e=await m.getFromStore("history"),t=document.getElementById("historyTableBody");if(!t)return;if(e.length===0){t.innerHTML='<tr><td colspan="6" class="text-center text-muted">No selection history yet.</td></tr>';return}e.sort((n,o)=>o.timestamp-n.timestamp),t.innerHTML=e.map(n=>`
      <tr>
        <td>${new Date(n.timestamp).toLocaleDateString()}</td>
        <td>${n.listName||"Unknown"}</td>
        <td>${n.prize}</td>
        <td>${n.winners.length}</td>
        <td>${n.winners.map(o=>o.displayName).join(", ")}</td>
        <td>
          <button class="btn btn-sm btn-outline-danger" data-history-id="${n.historyId}" onclick="deleteHistoryConfirm(this.dataset.historyId)">
            <i class="bi bi-trash"></i>
          </button>
        </td>
      </tr>
    `).join("")}catch(e){console.error("Error loading history:",e),a.showToast("Error loading history: "+e.message,"error")}}async function Ut(){try{const e=await m.getFromStore("history"),t=await C.getAllWinners(),n=e.length,o=t.length,s=n>0?Math.round(o/n*10)/10:0,r={};e.forEach(l=>{r[l.prize]=(r[l.prize]||0)+1});const i=Object.keys(r).reduce((l,d)=>r[l]>r[d]?l:d,"-"),c={totalSelections:n,totalWinners:o,averageWinners:s,mostUsedPrize:i};for(const[l,d]of Object.entries(c)){const h=document.getElementById(l);h&&(h.textContent=d)}}catch(e){console.error("Error updating history stats:",e)}}document.addEventListener("DOMContentLoaded",async function(){try{await xt(),setTimeout(()=>{document.getElementById("appModal")&&(window.appModal=ve)},100),a.showToast("Application loaded successfully!","success")}catch(e){console.error("Initialization error:",e),a.showToast("Failed to initialize application: "+e.message,"error")}});"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("/worker.js").then(e=>{console.log("SW registered: ",e)}).catch(e=>{console.log("SW registration failed: ",e)})});
//# sourceMappingURL=index-Dy02l2rI.js.map
